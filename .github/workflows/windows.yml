name: Windows

on: [push, pull_request]


env:
  MKL_URL: "https://romang.blob.core.windows.net/mariandev/ci/mkl-2020.1-windows-static.zip"
  VCPKG_SHA: "0bf3923f9fab4001c00f0f429682a0853b5749e0"

jobs:
  build-deps:
    runs-on: windows-2019
    strategy:
      matrix:
        pkg:
          - protobuf
          - pcre2
          - zlib
          - libarchive
          - qt5-base
          - qt5[essentials]
          - qt5-tools
          - qt5-translations
    name: Build ${{ matrix.pkg }}

    env:
      VCPKG_BINARY_SOURCES: 'nuget,GitHub,readwrite'

    steps:
      - name: Prepare vcpkg
        uses: lukka/run-vcpkg@v7.3
        with:
          setupOnly: true
          doNotCache: true
          vcpkgGitCommitId: ${{ env.VCPKG_SHA }}
          vcpkgDirectory: /vcpkg/

      - name: Fetch NuGet
        run: echo "::set-output name=path::$($VCPKG_ROOT/vcpkg fetch nuget | tail -n1)"
        id: nuget
        shell: bash

      - name: Setup NuGet
        run: >
            ${{ steps.nuget.outputs.path }} sources add
            -source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
            -storepasswordincleartext
            -name "GitHub"
            -username "${{ github.repository_owner }}"
            -password "${{ secrets.GITHUB_TOKEN }}"

      - name: Install ${{ matrix.pkg }}
        run: |
              $VCPKG_ROOT/vcpkg install --triplet x64-windows-static --clean-after-build ${{ matrix.pkg }}
        shell: bash

  build-windows:
    needs: [build-deps]
    runs-on: windows-2019
    strategy:
      matrix:
        include:
          # Windows CPU-only build
          - name: "Windows CPU-only"
            cuda: ""
    name: ${{ matrix.name }}

    env:
      VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'

    steps:
    - name: Checkout
      if: ${{ false }}
      uses: actions/checkout@v2
      with:
        submodules: recursive

    # - name: Download MKL
    #   run: |
    #     # Wget retries downloading files and is faster than Invoke-WebRequest
    #     C:\msys64\usr\bin\wget.exe -nv ${{ env.MKL_URL }} -O mkl.zip
    #     Expand-Archive -Force mkl.zip ${{ github.workspace }}\mkl
    #     # Set MKLROOT environment variable so that CMake can find MKL
    #     echo "MKLROOT=${{ github.workspace }}\mkl" | Out-File -FilePath $env:GITHUB_ENV  -Encoding utf8 -Append
    #   shell: powershell

    - name: Prepare vcpkg
      uses: lukka/run-vcpkg@v7.3
      with:
#         vcpkgArguments: "protobuf pcre2 zlib libarchive qt5-base qt5[essentials] qt5-tools qt5-translations"
        setupOnly: true
        doNotCache: true
        # vcpkgGitCommitId: 6185aa76504a5025f36754324abf307cc776f3da
        # vcpkgGitCommitId: 44d94c2edbd44f0c01d66c2ad95eb6982a9a61bc
        vcpkgGitCommitId: ${{ env.VCPKG_SHA }}
        vcpkgDirectory: /vcpkg/
        # vcpkgTriplet: x64-windows-static

    # - name: Update ports
    #   run: $VCPKG_ROOT/vcpkg update
    #   shell: bash


    - name: Fetch NuGet
      run: echo "::set-output name=path::$($VCPKG_ROOT/vcpkg fetch nuget | tail -n1)"
      id: nuget
      shell: bash

    - name: Setup NuGet
      run: >
          ${{ steps.nuget.outputs.path }} sources add
          -source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
          -storepasswordincleartext
          -name "GitHub"
          -username "${{ github.repository_owner }}"
          -password "${{ secrets.GITHUB_TOKEN }}"

    - name: Install dependencies
      run: |
            $VCPKG_ROOT/vcpkg install --triplet x64-windows-static --clean-after-build \
              protobuf pcre2 zlib libarchive qt5-base qt5[essentials] qt5-tools qt5-translations
      shell: bash

    - name: Upload logs
      uses: actions/upload-artifact@v2
      if: ${{ always() }}
      with:
        name: logs
        path: |
          ${{ env.VCPKG_ROOT }}\buildtrees\**\*.log

    # Windows CPU only minimal build
    # - name: Build Release # @TODO this is actually a debug build until the ninja generator gets fixed
    #   uses: lukka/run-cmake@main
    #   with:
    #     buildDirectory: ${{ github.workspace }}/build
    #     cmakeAppendedArgs: '-G Ninja
    #       -DCMAKE_BUILD_TYPE="Release"'
    #     cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
    #     cmakeListsTxtPath: ${{ github.workspace }}/CMakeLists.txt
    #     useVcpkgToolchainFile: true
    #     cmakeBuildType: Release


    # - name: Print versions
    #   working-directory: build/
    #   run: ./translateLocally --version
    #   shell: cmd

# https://github.com/microsoft/vcpkg/blob/master/docs/users/binarycaching.md#nuget-provider-configuration
